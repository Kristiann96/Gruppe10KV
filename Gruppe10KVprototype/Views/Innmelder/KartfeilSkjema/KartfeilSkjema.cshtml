@model KartfeilSkjemaViewModel
@{
    ViewData["Title"] = "Meld inn kartfeil";
}

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"/>
    <link rel="stylesheet" href="~/css/pages/kart/map_view.css"/>
    <link rel="stylesheet" href="~/css/pages/TemporaryCSS/KartFeilSkjema.css" />
}

<div class="map-page-container">
    <!-- Left side: Form content -->
    <div class="form-side">
        <div class="map-card">
            <div class="map-header">
                <h1 class="map-title">Meld inn kartfeil</h1>
                <p class="map-description">Fyll ut informasjon om kartfeilen du har markert</p>
            </div>
            <div class="map-content">
                <form asp-controller="KartfeilSkjemaBekreftelse"
                      asp-action="KartfeilSkjemaBekreftelse"
                      method="post">
                    @Html.AntiForgeryToken()

                    <input type="hidden" asp-for="GeometriGeoJson" />

                    <div class="form-group">
                        <label asp-for="Tittel">Tittel</label>
                        <input asp-for="Tittel" class="form-control" />
                        <span asp-validation-for="Tittel" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Beskrivelse">Beskrivelse</label>
                        <textarea asp-for="Beskrivelse" class="form-control" rows="5"></textarea>
                        <span asp-validation-for="Beskrivelse" class="text-danger"></span>
                    </div>

                    <div class="checkbox-group">
                        <div class="form-check">
                            <input asp-for="ErNodEtatKritisk" class="form-check-input" />
                            <label asp-for="ErNodEtatKritisk" class="form-check-label">
                                Kartfeilen kan være til hinder for nødetater
                            </label>
                        </div>
                    </div>

                    <div class="checkbox-group">
                        <div class="form-check">
                            <input type="checkbox" id="bildeFunksjonalitet" class="form-check-input" onclick="showUploadAlert()" />
                            <label class="form-check-label">Last opp bilde</label>
                        </div>
                    </div>

                    <div class="map-controls">
                        <button type="submit" class="map-button map-button-primary">Se over innmelding</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Right side: Map -->
    <div class="map-side">
        <div id="miniMap" class="map-mini"></div>
    </div>
</div>

<!-- Dialog for bildefunksjonalitet -->
<div id="bildeDialog" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Funksjon under utvikling</h3>
            <span class="close" onclick="lukkDialog()">&times;</span>
        </div>
        <div class="modal-body">
            <p>Her kan du legge ved bilder, og gi kartverket anledning til å hente bildets innebygde gps lokasjon.
               Data vil slettes når saken avsluttes</p>
        </div>
        <div class="modal-footer">
            <button onclick="lukkDialog()" class="map-button map-button-secondary">OK</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <!-- Vår konfigurasjonsfil for kart -->
    <script src="~/js/maps/config/mapConfig.js"></script>

    <script>
        // Initialiser mini-kart med samme konfigurasjon som i KartfeilMarkering
        const miniMap = MapConfig.initializeMap('miniMap', [62.1995, 6.1286], 15);

        // Vis geometri fra hidden field
        const geoJson = @Html.Raw(Json.Serialize(Model.GeometriGeoJson));
        if (geoJson) {
            const geoJsonLayer = L.geoJSON(JSON.parse(geoJson)).addTo(miniMap);
            miniMap.fitBounds(geoJsonLayer.getBounds());
        }

        // Dialog-funksjoner
        function visBildeDialog() {
            document.getElementById('bildeDialog').style.display = 'block';
            document.getElementById('bildeFunksjonalitet').checked = false;
        }

        function lukkDialog() {
            document.getElementById('bildeDialog').style.display = 'none';
        }

        // Lukk dialog hvis man klikker utenfor
        window.onclick = function (event) {
            if (event.target == document.getElementById('bildeDialog')) {
                lukkDialog();
            }
        }

       function showUploadAlert() {
    const checkbox = document.getElementById('bildeFunksjonalitet');
    if (checkbox.checked) {
        document.getElementById('bildeDialog').style.display = 'block';
        checkbox.checked = false; // Unchecks the checkbox
    }
        }
    </script>
}