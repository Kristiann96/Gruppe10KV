@model ViewModels.MineInnmeldingerViewModel

@{
    Layout = "_Layout";
}

<!DOCTYPE html>
<html lang="no">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mine Innmeldinger (ID: @Model.Innmeldinger.FirstOrDefault()?.InnmelderId)</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }

        th {
            white-space: nowrap;
            cursor: pointer;
            position: relative;
        }

            th .sort-arrow {
                position: absolute;
                right: 10px;
            }

        tr {
            cursor: pointer;
        }

            tr:hover {
                background-color: #f0f0f0;
            }

            tr:active {
                background-color: #dcdcdc;
            }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

            .pagination a {
                margin: 0 5px;
                padding: 8px 16px;
                text-decoration: none;
                color: white;
                background-color: #1c833b;
                border: 1px solid #ddd;
                border-radius: 4px;
                transition: background-color 0.3s, color 0.3s;
            }

                .pagination a:hover {
                    background-color: #00509c;
                    color: white;
                }

                .pagination a.active {
                    font-weight: bold;
                    background-color: #00509c;
                    color: white;
                    border-color: #00509c;
                }

        .search-bar {
            display: flex;
            justify-content: start;
            margin-bottom: 20px;
        }

            .search-bar input[type="text"] {
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px 0 0 4px;
                width: 300px;
            }

            .search-bar button {
                padding: 8px 16px;
                border: 1px solid #ddd;
                border-left: none;
                border-radius: 0 4px 4px 0;
                background-color: #1c833b;
                color: white;
                cursor: pointer;
                transition: background-color 0.3s, color 0.3s;
            }

                .search-bar button:hover {
                    background-color: #00509c;
                }

        .priority-circle {
            display: inline-block;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            margin-right: 5px;
        }
    </style>
</head>
<body>

    <main>
        <h1>Mine Innmeldinger (ID: @Model.Innmeldinger.FirstOrDefault()?.InnmelderId)</h1>

        <form method="get" action="@Url.Action("MineInnmeldinger")" class="search-bar">
            <input type="text" name="searchTerm" placeholder="Søk i saker" />
            <button type="submit">Søk</button>
        </form>

        <form method="get" action="@Url.Action("MineInnmeldinger")" id="sortForm">
            <input type="hidden" name="pageNumber" value="@Model.PageNumber" />
            <input type="hidden" name="pageSize" value="@Model.PageSize" />
            <input type="hidden" name="sortColumn" id="sortColumn" value="@Model.CurrentSortColumn"/>
            <input type="hidden" name="sortOrder" id="sortOrder" value="@Model.CurrentSortOrder"/>
        </form>

        <table>
            <thead>
                <tr>
                    <th onclick="sortTable('InnmeldingId')">INNMELDING ID <span class="sort-arrow">@GetSortArrow("InnmeldingId")</span></th>
                    <th onclick="sortTable('Tittel')">TITTEL <span class="sort-arrow">@GetSortArrow("Tittel")</span></th>
                    <th onclick="sortTable('Status')">STATUS <span class="sort-arrow">@GetSortArrow("Status")</span></th>
                    <th onclick="sortTable('Prioritet')">PRIORITET <span class="sort-arrow">@GetSortArrow("Prioritet")</span></th>
                    <th onclick="sortTable('SisteEndring')">SISTE ENDRING <span class="sort-arrow">@GetSortArrow("SisteEndring")</span></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var innmelding in Model.Innmeldinger)
                {
                    <tr onclick="window.location.href='@Url.Action("OppdatereInnmelding", "OppdatereInnmelding", new { id = innmelding.InnmeldingId })'">
                        <td>@innmelding.InnmeldingId</td>
                        <td>@innmelding.Tittel</td>
                        <td>@innmelding.Status</td>
                        <td>
                            @{
                                var color = GetPriorityColor(innmelding.Prioritet);
                            }
                            <div class="priority-circle" style="background-color:@color;"></div>
                            @innmelding.Prioritet
                        </td>
                        <td>@innmelding.SisteEndring.ToString("dd.MM.yyyy HH:mm")</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="pagination">
            @if (Model.PageNumber > 1)
            {
                <a href="@Url.Action("MineInnmeldinger", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize, sortColumn = Model.CurrentSortColumn, sortOrder = Model.CurrentSortOrder })">Forrige</a>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <a href="@Url.Action("MineInnmeldinger", new { pageNumber = i, pageSize = Model.PageSize, sortColumn = Model.CurrentSortColumn, sortOrder = Model.CurrentSortOrder })" class='@(i == Model.PageNumber ? "active" : "")'>@i</a>
            }

            @if (Model.PageNumber < Model.TotalPages)
            {
                <a href="@Url.Action("MineInnmeldinger", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize, sortColumn = Model.CurrentSortColumn, sortOrder = Model.CurrentSortOrder })">Neste</a>
            }
        </div>
    </main>

    <script>
        function sortTable(column) {
            var currentSortColumn = document.getElementById('sortColumn').value;
            var currentSortOrder = document.getElementById('sortOrder').value;

            if (currentSortColumn === column) {
                document.getElementById('sortOrder').value = currentSortOrder === 'asc' ? 'desc' : 'asc';
            } else {
                document.getElementById('sortColumn').value = column;
                document.getElementById('sortOrder').value = 'asc';
            }

            document.getElementById('sortForm').submit();
        }
    </script>

    @functions {
        string GetSortArrow(string column)
        {
            if (Model.CurrentSortColumn == column)
            {
                return Model.CurrentSortOrder == "asc" ? "▲" : "▼";
            }
            return " ";
        }

      
         string GetPriorityColor(string prioritet)
            {
                if (string.IsNullOrEmpty(prioritet))
                {
                    return "#000000"; // Black for null or empty values
                }

                var normalizedPriority = prioritet.Trim().ToLower();
                string color;
                switch (normalizedPriority)
                {
                    case "ikke_vurdert":
                        color = "#0000FF"; // Blue
                        break;
                    case "lav":
                        color = "#006400"; // Dark Green
                        break;
                    case "moderat":
                        color = "#7FFF00"; // Yellow-Green
                        break;
                    case "høy":
                        color = "#FFFF00"; // Yellow
                        break;
                    case "kritisk":
                        color = "#FF7F00"; // Orange
                        break;
                    case "farligforlivhelse":
                        color = "#FF4500"; // Red-Orange
                        break;
                    case "ekstremhaster":
                        color = "#FF0000"; // Red
                        break;
                    default:
                        color = "#000000"; // Black for unknown values
                        break;
                }
                return color;
            }
        }



    

</body>
</html>
