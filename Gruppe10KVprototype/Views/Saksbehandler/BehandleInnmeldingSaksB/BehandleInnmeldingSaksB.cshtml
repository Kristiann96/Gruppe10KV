@model ViewModels.BehandleInnmeldingSaksBViewModel

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.
" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
    <link rel="stylesheet" href="~/css/chat_demo.css" asp-append-version="true" />
}

<div class="container">
    <div class="info-panel">
        @if (Model?.InnmeldingModel != null)
        {
            <h2>@Model.InnmeldingModel.Tittel</h2>
            <form asp-action="OppdateringAvInnmeldingSaksB" asp-route-id="@Model.InnmeldingModel.InnmeldingId" method="post" id="updateForm">
                <div class="status-info">
                    <div class="form-group mb-3">
                        <label for="statusDropdown">Status:</label>
                        <select id="statusDropdown" class="form-control" asp-for="InnmeldingModel.Status" asp-items="Model.StatusOptions">
                            <option value="">Velg status</option>
                        </select>
                    </div>

                    <div class="form-group mb-3">
                        <label for="prioritetDropdown">Prioritet:</label>
                        <select id="prioritetDropdown" class="form-control" asp-for="InnmeldingModel.Prioritet" asp-items="Model.PrioritetOptions">
                            <option value="">Velg prioritet</option>
                        </select>
                    </div>

                    <div class="form-group mb-3">
                        <label for="kartTypeDropdown">Kart Type:</label>
                        <select id="kartTypeDropdown" class="form-control" asp-for="InnmeldingModel.KartType" asp-items="Model.KartTypeOptions">
                            <option value="">Velg kart type</option>
                        </select>
                    </div>

                    <p>Sist endret: @Model.InnmeldingModel.SisteEndring.ToString("dd.MM.yyyy HH:mm")</p>

                    @if (TempData["Kommunenavn"] != null && TempData["Kommunenummer"] != null)
                    {
                        <p>Kommune: <span class="badge">@TempData["Kommunenavn"] (@TempData["Kommunenummer"])</span></p>
                    }

                    <div class="form-group mt-4">
                        <button type="submit" id="saveButton" class="btn btn-primary">Lagre endringer</button>
                    </div>
                </div>
            </form>
            <div class="description">
                <h3>Beskrivelse</h3>
                <p>@Model.InnmeldingModel.Beskrivelse</p>
            </div>
            <div class="reporter-info">
                <h3>Innmelder</h3>
                @if (Model.InnmelderModel != null && Model.PersonModel != null)
                {
                    <p>Type: @Model.InnmelderModel.InnmelderType</p>
                    <p>Navn: @Model.PersonModel.Fornavn @Model.PersonModel.Etternavn</p>
                    <p>Telefon: @Model.PersonModel.Telefonnummer</p>
                }
                else if (Model.InnmeldingModel.GjestInnmelderId.HasValue)
                {
                    <p>Gjesteinnmelder</p>
                }
                else
                {
                    <p>Ingen innmelder informasjon tilgjengelig</p>
                }
            </div>
            @if (Model.SaksbehandlerModel != null)
            {
                <div class="handler-info">
                    <h3>Saksbehandler</h3>
                    <p>Stilling: @Model.SaksbehandlerModel.Stilling</p>
                    <p>E-post: @Model.SaksbehandlerModel.Jobbepost</p>
                    <p>Telefon: @Model.SaksbehandlerModel.Jobbtelefon</p>
                </div>
            }
        }
        else
        {
            <p>Ingen innmeldingsdetaljer tilgjengelig</p>
        }
    </div>

    <div id="map" style="height: 500px;"></div>
</div>

<!-- Modified chat section - now in a new container below the map -->
<div class="container mt-4">
    <div class="chat-section">
        <div class="chat-header">
            <div class="chat-user-info">
                @if (Model?.InnmelderModel != null && Model?.PersonModel != null)
                {
                    <span class="chat-user-name">@Model.PersonModel.Fornavn @Model.PersonModel.Etternavn</span>
                }
                else
                {
                    <span class="chat-user-name">Gjesteinnmelder</span>
                }
            </div>
        </div>

        <div class="chat-messages" id="chatMessages">
            <!-- Debug message -->
            <div class="message message-incoming">
                <div>Test message - if you see this, the chat is loading correctly</div>
                <div class="message-time">12:00</div>
            </div>
        </div>

        <div class="chat-input-container">
            <form id="chatForm">
                <input type="text"
                       id="messageInput"
                       placeholder="Skriv en melding..."
                       class="chat-input"
                       autocomplete="off" />
                <button type="submit" class="chat-send-button">Send</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
    <script src="~/js/maps/config/mapConfig.js"></script>
    <script src="~/js/maps/utils/mapControls.js"></script>
    <script src="~/js/chat_demo.js" asp-append-version="true"></script>

    <script>
        // Map initialization
        document.addEventListener('DOMContentLoaded', function () {
            const map = MapConfig.initializeMap('map');
            MapControls.initializeSearch(map);

        @if (Model?.Geometri != null && !string.IsNullOrEmpty(Model.Geometri.GeometriGeoJson))
        {
            <text>
                        const geoJsonFeature = JSON.parse('@Html.Raw(Model.Geometri.GeometriGeoJson)');
                        const geoJsonLayer = L.geoJSON(geoJsonFeature).addTo(map);
                        map.fitBounds(geoJsonLayer.getBounds());
            </text>
        }
                });

        // Error handling
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    alert('@TempData["ErrorMessage"]');
            </text>
        }

            // Form handling
            document.addEventListener('DOMContentLoaded', function () {
                const updateForm = document.getElementById('updateForm');
                if (updateForm) {
                    updateForm.addEventListener('submit', function (e) {
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                                    const button = document.getElementById('saveButton');
                                    if (button) {
                                        button.textContent = 'Lagret!';
                                    button.classList.remove('btn-primary');
                                    button.classList.add('btn-success');

                                            setTimeout(() => {
                                        button.textContent = 'Lagre endringer';
                                    button.classList.remove('btn-success');
                                    button.classList.add('btn-primary');
                                    button.disabled = false;
                                            }, 5000);
                                        }
            </text>
        }
                        });
                }
            });
    </script>
}